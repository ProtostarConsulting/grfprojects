angular
		.module("prostudyApp")
		.controller(
				"gfCourierListCtr",
				function($scope, $window, $mdToast, $timeout, $mdSidenav,
						$mdUtil, $log, $q, $mdDialog, $mdMedia, $state,
						tableTestDataFactory, appEndpointSF, $location,
						$anchorScroll, ajsCache) {
					console.log("Inside gfCourierListCtr");

					var courierListCacheKey = "gf-courierListCache";
					$scope.pagingInfoReturned = null;
					$scope.gfCouriertList = [];

					/*
					 * $scope.query = { order : '-courierDispatchDate', limit :
					 * 60, limitOptions : [ 1000, 2000, 3000, 4000, 5000 ], page :
					 * 1 };
					 */
					$scope.query = {
						order : '-autoGenerated',
						limit : 60,
						limitOptions : [ 1000, 2000, 3000, 4000, 5000 ],
						page : 1,
						totalSize : 0,
						totalSizeBackup : 0,
						searchByGrfRegNo : '',
						searchSchoolTxt : '',
						courierType : "All",
						logisticsType : "All",
						pastEightDays : false,
						entityList : null,
						optionValueAll : "All"
					};

					$scope.logisticsList = [ "By Post", "By Hand", "ST Postal",
							"Tej Courier" ];
					$scope.courierTypelist = [ "Book", "Certificate",
							"Error Certificate", "Error books",
							"Prize Certificate" ];

					$scope.pendingPast8Days = function(cheked) {
						if (cheked) {
							$scope.searchTextDone = true;
							$scope.gfCouriertList = [];
							$scope.query.searchByGrfRegNo = "";
							$scope.query.searchSchoolTxt = "";
							$scope.query.logisticsType = $scope.query.optionValueAll;
							$scope.query.courierType = $scope.query.optionValueAll;

							var todayDate = new Date();
							var eightDaysBefore = new Date();
							var numberOfDaysToAdd = -8;
							eightDaysBefore.setDate(todayDate.getDate()
									+ numberOfDaysToAdd);
							
							var gfCourierService = appEndpointSF
									.getGFCourierService();
							gfCourierService.getPendingPastDate(
									eightDaysBefore.getTime(),
									$scope.curUser.instituteObj.yearofExam)
									.then(function(gfCouriertList) {
										$scope.gfCouriertList = gfCouriertList;
										$scope.query.totalSize = gfCouriertList.length;
										$scope.searchTextDone = false;
									});
						} else {
							$scope.gfCouriertList = $scope.gfCouriertListBackup;
							$scope.query.totalSize = $scope.gfCouriertList.length;
						}
					}

					$scope.getGFCourierByInstitute = function(refresh) {
						$scope.loading = true;
						// Note this key has to be unique across application
						// else it will return unexpected result.
						if (!angular.isUndefined(ajsCache
								.get(courierListCacheKey))
								&& !refresh) {
							$log.debug("Found List in Cache, return it.")
							$scope.gfCouriertList = ajsCache
									.get(courierListCacheKey);
							$scope.gfCouriertListBackup = $scope.gfCouriertList;
							$scope.loading = false;
							return;
						}

						var gfCourierService = appEndpointSF
								.getGFCourierService();
						gfCourierService
								.getGFCourierByInstitute(
										$scope.curUser.instituteID,
										$scope.curUser.instituteObj.yearofExam)
								.then(
										function(gfCouriertList) {
											$scope.gfCouriertList = gfCouriertList;
											$scope.gfCouriertListBackup = $scope.gfCouriertList;
											ajsCache.put(courierListCacheKey,
													gfCouriertList);
											$scope.loading = false;
										});
					}
					$scope.refreshListPage = function() {
						// Remove cache and reset everything.
						ajsCache.remove(courierListCacheKey);
						$scope.query.page = 1;
						$scope.pagingInfoReturned = null;
						$scope.query.searchByGrfRegNo = "";
						$scope.query.searchSchoolTxt = "";
						$scope.query.logisticsType = $scope.query.optionValueAll;
						$scope.query.courierType = $scope.query.optionValueAll;
						$scope.query.pastEightDays = false;
						$scope.gfCouriertList = [];
						$scope.onpagechange();
					}

					$scope.onpagechange = function() {
						$scope.loading = true;
						$location.hash('topRight');
						$anchorScroll();

						if ($scope.query.searchSchoolTxt) {
							$scope.loading = false;
							return;
						}

						// Note this key has to be unique across application
						// else it will return unexpected result.
						if (!angular.isUndefined(ajsCache
								.get(courierListCacheKey))) {
							$log.debug("Found List in Cache, return it.")
							$scope.queriedCourierDataCache = ajsCache
									.get(courierListCacheKey);
							$scope.gfCouriertList = $scope.queriedCourierDataCache.entityList ? $scope.queriedCourierDataCache.entityList
									: [];
							$scope.gfCouriertListBackup = $scope.gfCouriertList;
							$scope.query.totalSize = $scope.queriedCourierDataCache.totalSize;
							$scope.query.totalSizeBackup = $scope.queriedCourierDataCache.totalSizeBackup;

						}

						if ($scope.gfCouriertList.length < ($scope.query.limit * $scope.query.page)) {
							$log
									.debug("Need to fetch this page data from server. Doing so....");
							var pagingInfoTemp = {
								entityList : null,
								startPage : $scope.query.page,
								limit : $scope.query.limit,
								totalEntities : 0,
								webSafeCursorString : $scope.pagingInfoReturned ? $scope.pagingInfoReturned.webSafeCursorString
										: null
							};

							var gfCourierService = appEndpointSF
									.getGFCourierService();
							gfCourierService
									.fetchCourierListByPaging(
											$scope.curUser.instituteID,
											$scope.curUser.instituteObj.yearofExam,
											pagingInfoTemp)
									.then(
											function(pagingInfoReturned) {
												$scope.pagingInfoReturned = pagingInfoReturned;
												if ($scope.gfCouriertList.length < pagingInfoReturned.totalEntities) {
													$scope.gfCouriertList = $scope.gfCouriertList
															.concat(pagingInfoReturned.entityList);
												} else {
													$scope.gfCouriertList = pagingInfoReturned.entityList;
												}
												$scope.gfCouriertListBackup = $scope.gfCouriertList;
												$scope.query.totalSize = pagingInfoReturned.totalEntities;
												$scope.query.totalSizeBackup = pagingInfoReturned.totalEntities;
												$scope.query.entityList = $scope.gfCouriertList;

												ajsCache.put(
														courierListCacheKey,
														$scope.query);

												$scope.loading = false;
											});
						} else {
							$log
									.debug("NOT Need to fetch from server. Just returned...");
							$scope.loading = false;
						}
					}
					$scope.searchTextDone = false;
					$scope.searchSchoolTxtChange = function() {
						if ($scope.query.searchSchoolTxt
								&& $scope.query.searchSchoolTxt.length >= 3) {
							$scope.query.searchByGrfRegNo = "";
							$scope.query.logisticsType = $scope.query.optionValueAll;
							$scope.query.courierType = $scope.query.optionValueAll;
							$scope.query.pastEightDays = false;
							$scope.query.page = 1;
							$scope.schoolSerachTxtChange(
									$scope.query.searchSchoolTxt.trim(),
									$scope.curUser.instituteObj.yearofExam);
						} else {
							// let user type whole 12 chars of GRF No
							// restore $scope.gfCouriertList if was filtered
							if ($scope.gfCouriertList.length !== $scope.gfCouriertListBackup.length) {
								$scope.query.page = 1;
								$scope.gfCouriertList = $scope.gfCouriertListBackup;
								$scope.query.totalSize = $scope.query.totalSizeBackup;
							}
						}
					}
					$scope.searchByGrfRegNoChange = function() {
						var enteredGrfRegNo = $scope.query.searchByGrfRegNo
								.trim();
						if (enteredGrfRegNo && enteredGrfRegNo.length >= 5) {
							$scope.query.searchSchoolTxt = "";
							$scope.query.logisticsType = $scope.query.optionValueAll;
							$scope.query.courierType = $scope.query.optionValueAll;
							$scope.query.pastEightDays = false;
							$scope.query.page = 1;
							var grfRegNo = (enteredGrfRegNo
									.startsWith('P-2018-') && enteredGrfRegNo.length >= 12) ? enteredGrfRegNo
									: 'P-2018-' + enteredGrfRegNo;

							$scope.grfRegNoChange(grfRegNo);
						} else {
							// let user type whole 5 chars of GRF No
							// restore $scope.gfCouriertList if was filtered
							if ($scope.gfCouriertList.length !== $scope.gfCouriertListBackup.length) {
								$scope.query.page = 1;
								$scope.gfCouriertList = $scope.gfCouriertListBackup;
								$scope.query.totalSize = $scope.query.totalSizeBackup;
							}
						}
					}

					$scope.schoolSerachTxtChange = function(searchSchoolTxt,
							yearOfExam) {

						$scope.searchTextDone = true;
						$scope.gfCouriertList = [];
						$log.debug("Fetcing searchSchoolTxt: "
								+ searchSchoolTxt);
						var gfCourierService = appEndpointSF
								.getGFCourierService();
						gfCourierService
								.searchCourierBySchoolName(searchSchoolTxt,
										yearOfExam)
								.then(
										function(courierList) {
											if (courierList) {
												$scope.gfCouriertList = courierList;
												$scope.query.totalSize = courierList.length;
											}else {
												$scope.query.totalSize = 0;
											}

											$scope.searchTextDone = false;
										});
					}

					$scope.grfRegNoChange = function(grfRegNo) {

						$scope.searchTextDone = true;
						$scope.gfCouriertList = [];
						$log.debug("Fetcing GRF No: " + grfRegNo);
						var gfCourierService = appEndpointSF
								.getGFCourierService();
						gfCourierService
								.getCourierByGRFNo(grfRegNo,
										$scope.curUser.instituteObj.yearofExam)
								.then(
										function(courierList) {
											if (courierList) {
												$scope.gfCouriertList = courierList;
												$scope.query.totalSize = courierList.length;
											}else {
												$scope.query.totalSize = 0;
											}

											$scope.searchTextDone = false;
										});
					}

					$scope.courierTypeChange = function() {
						$scope.query.searchSchoolTxt = "";
						$scope.query.searchByGrfRegNo = "";
						$scope.query.logisticsType = $scope.query.optionValueAll;
						$scope.query.pastEightDays = false;

						if ($scope.query.courierType == $scope.query.optionValueAll) {
							$scope.query.page = 1;
							$scope.gfCouriertList = $scope.gfCouriertListBackup;
							$scope.query.totalSize = $scope.query.totalSizeBackup;
							return;
						}
						$scope.searchTextDone = true;
						$scope.gfCouriertList = [];
						$log.debug("Fetcing By: " + $scope.query.courierType);
						var gfCourierService = appEndpointSF
								.getGFCourierService();
						gfCourierService
								.getCourierByCourierType(
										$scope.query.courierType,
										$scope.curUser.instituteObj.yearofExam)
								.then(
										function(items) {
											if (items) {
												$scope.gfCouriertList = $scope.gfCouriertList
														.concat(items);
												$scope.query.totalSize = items.length;
											} else {
												$scope.query.totalSize = 0;
											}

											$scope.searchTextDone = false;
										});
					}

					$scope.logisticsTypeChange = function() {
						$scope.query.searchSchoolTxt = "";
						$scope.query.searchByGrfRegNo = "";
						$scope.query.courierType = $scope.query.optionValueAll;
						$scope.query.pastEightDays = false;

						if ($scope.query.logisticsType == $scope.query.optionValueAll) {
							$scope.query.page = 1;
							$scope.gfCouriertList = $scope.gfCouriertListBackup;
							$scope.query.totalSize = $scope.query.totalSizeBackup;
							return;
						}
						$scope.searchTextDone = true;
						$scope.gfCouriertList = [];
						$log.debug("Fetcing By: " + $scope.query.logisticsType);
						var gfCourierService = appEndpointSF
								.getGFCourierService();
						gfCourierService
								.getCourierByLogisticsType(
										$scope.query.logisticsType,
										$scope.curUser.instituteObj.yearofExam)
								.then(
										function(items) {
											if (items) {
												$scope.gfCouriertList = $scope.gfCouriertList
														.concat(items);
												$scope.query.totalSize = items.length;
											} else {
												$scope.query.totalSize = 0;
											}

											$scope.searchTextDone = false;
										});
					}

					$scope.getGFCourierByInstitute = function(refresh) {
						$scope.loading = true;
						// Note this key has to be unique across application
						// else it will return unexpected result.
						if (!angular.isUndefined(ajsCache
								.get(courierListCacheKey))
								&& !refresh) {
							$log.debug("Found List in Cache, return it.")
							$scope.gfCouriertList = ajsCache
									.get(courierListCacheKey);
							$scope.gfCouriertListBackup = $scope.gfCouriertList;
							$scope.loading = false;
							return;
						}

						var gfCourierService = appEndpointSF
								.getGFCourierService();
						gfCourierService
								.getGFCourierByInstitute(
										$scope.curUser.instituteID,
										$scope.curUser.instituteObj.yearofExam)
								.then(
										function(gfCouriertList) {
											$scope.gfCouriertList = gfCouriertList;
											$scope.gfCouriertListBackup = $scope.gfCouriertList;
											ajsCache.put(courierListCacheKey,
													gfCouriertList);
											$scope.loading = false;
										});
					}

					$scope.waitForServiceLoad = function() {
						if (appEndpointSF.is_service_ready) {
							// $scope.getGFCourierByInstitute();
							// $scope.getPartnerByInstitute();
							$scope.onpagechange();
						} else {
							$log.debug("Services Not Loaded, watiting...");
							$timeout($scope.waitForServiceLoad, 1000);
						}
					}
					$scope.downloadData = function() {
						document.location.href = "DownloadGfCourierList?InstituteId="
								+ $scope.curUser.instituteID
								+ "&yearofExam="
								+ $scope.curUser.instituteObj.yearofExam;
					}

					$scope.waitForServiceLoad();

					$scope.refresh = function() {
						$state.reload();
					}

				});