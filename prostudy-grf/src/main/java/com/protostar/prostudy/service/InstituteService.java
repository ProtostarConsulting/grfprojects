package com.protostar.prostudy.service;

import static com.googlecode.objectify.ObjectifyService.ofy;

import java.util.Date;
import java.util.List;
import java.util.logging.Logger;

import com.google.api.server.spi.config.Api;
import com.google.api.server.spi.config.ApiMethod;
import com.google.api.server.spi.config.ApiNamespace;
import com.google.api.server.spi.config.Named;
import com.protostar.prostudy.entity.InstituteEntity;
import com.protostar.prostudy.entity.UserEntity;
import com.protostar.prostudy.gf.entity.PartnerSchoolEntity;

@Api(name = "instituteService", version = "v0.1", namespace = @ApiNamespace(ownerDomain = "com.protostar.prostudy.service", ownerName = "com.protostar.prostudy.service", packagePath = ""))
public class InstituteService {
	private final Logger log = Logger.getLogger(InstituteService.class
			.getName());

	@ApiMethod(name = "addInstitute")
	public InstituteEntity addInstitute(InstituteEntity instituteEntity) {
		String authorizations = "	{\"authorizations\":[{\"authName\":\"updatemyprofile\",\"authorizations\":[]},{\"authName\":\"setup\",\"authorizations\":[]}]}";
		instituteEntity.setAuthorizations(authorizations);
		Date date = new Date();
		instituteEntity.setCreatedDate(date);
		ofy().save().entity(instituteEntity).now();
		return instituteEntity;
	}

	@ApiMethod(name = "getInstitutes")
	public List<InstituteEntity> getInstitutes() {
		return ofy().load().type(InstituteEntity.class).list();
	}

	@ApiMethod(name = "getInstituteById")
	public InstituteEntity getInstituteById(@Named("id") Long id) {
		log.info("Inside getInstituteById " + id);
		InstituteEntity selected = ofy().load().type(InstituteEntity.class)
				.id(id).now();
		return selected;
	}

	@ApiMethod(name = "getInstituteByGRFNo", path = "getInstituteByGRFNo")
	public PartnerSchoolEntity getInstituteByGRFNo(
			@Named("autoGenerated") String autoGenerated) {
		PartnerSchoolEntity selected = ofy().load()
				.type(PartnerSchoolEntity.class)
				.filter("autoGenerated", autoGenerated).first().now();
		return selected;
	}

	@ApiMethod(name = "editInstitute")
	public void editInstitute(InstituteEntity insti) {
		ofy().save().entity(insti).now();
		return;
	}

	@ApiMethod(name = "updateInstitute")
	public void updateInstitute(InstituteEntity insti) {
		ofy().save().entity(insti).now();
		return;
	}

	@ApiMethod(name = "getInstituteByCurrentUser", path = "getInstituteByCurrentUser")
	public InstituteEntity getInstituteByCurrentUser(@Named("id") Long id) {
		log.info("Inside getInstituteById " + id);
		InstituteEntity selected = ofy().load().type(InstituteEntity.class)
				.id(id).now();
		return selected;
	}

	@ApiMethod(name = "getInstituteUsers", path = "getInstituteUsers")
	public List<UserEntity> getInstituteUsers(@Named("id") Long instituteID) {
		log.info("Inside getInstituteById " + instituteID);
		List<UserEntity> users = (List<UserEntity>) ofy().load()
				.type(UserEntity.class).filter("instituteID", instituteID)
				.list();
		return users;
	}

}
