package com.protostar.prostudy.gf.service;

import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.TimeZone;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.protostar.prostudy.gf.entity.BookDetail;
import com.protostar.prostudy.gf.entity.BookSummary;
import com.protostar.prostudy.gf.entity.ExamDetail;
import com.protostar.prostudy.gf.entity.GFCourierEntity;
import com.protostar.prostudy.gf.entity.PartnerSchoolEntity;
import com.protostar.prostudy.gf.entity.PaymentDetail;
import com.protostar.prostudy.until.data.UtilityService;

/**
 * Servlet implementation class DownloadGfCourierList
 */
public class DownloadGfCourierList extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public DownloadGfCourierList() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub

		//System.out.println("hi i am download servlet");
		if (request.getRemoteHost().contains("localhost")
				|| request.getRemoteHost().contains("127.0.0.1")) {
			response.addHeader("Access-Control-Allow-Origin", "*");
			response.addHeader("Access-Control-Allow-Methods",
					"GET,PUT,POST,DELETE");
			response.addHeader("Access-Control-Allow-Headers", "Content-Type");
		}
		
		Long insId = Long.parseLong(request.getParameter("InstituteId"));
		String yearofExam = request.getParameter("yearofExam");
		
		GFCourierService gfCourierService = new GFCourierService();

		Date date = new Date();
		String DATE_FORMAT = "dd/MMM/yyyy";
		SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);

		List<GFCourierEntity> courierList = gfCourierService
				.getGFCourierByInstitute(insId, yearofExam);

		OutputStream out = null;
		try {

			// response.setContentType("application/vnd.ms-excel");
			response.setContentType("text/csv");

			response.setHeader("Content-Disposition",
					"attachment; filename=GFCourierData_" + sdf.format(date)
							+ ".csv");

			ServletOutputStream outputStream = response.getOutputStream();
			OutputStreamWriter writer = new OutputStreamWriter(outputStream);

			writer.append("Sr. No.");
			writer.append(',');
			writer.append("GRF. Reg. No.");
			writer.append(',');
			writer.append("School Name");
			writer.append(',');
			writer.append("City");
			writer.append(',');
			writer.append("Taluka");
			writer.append(',');
			writer.append("District");
			writer.append(',');
			writer.append("State");
			writer.append(',');

			writer.append("Dispatch Date");
			writer.append(',');
			writer.append("Logistic");
			writer.append(',');
			writer.append("Courier Name");
			writer.append(',');
			writer.append("Docket ID");
			writer.append(',');
			writer.append("Courier Cost");
			writer.append(',');

			writer.append(System.lineSeparator());

			for (int i = 0; i < courierList.size(); i++) {

				writer.append(Integer.toString(i + 1));
				writer.append(',');
				writer.append(courierList.get(i).getAutoGenerated());
				writer.append(',');

				PartnerSchoolEntity schoolEntity = courierList.get(i)
						.getSchoolName();

				writer.append(UtilityService.trimForCSV(schoolEntity
						.getSchoolName()));
				writer.append(',');

				/*
				 * String city = schoolEntity.getAddress().getCity(); city =
				 * city.replace("\n", "").replace("\r", "").trim();
				 */
				String city = UtilityService.trimForCSV(schoolEntity
						.getAddress().getCity());
				writer.append(city);
				writer.append(',');
				writer.append(schoolEntity.getAddress().getTal());
				writer.append(',');
				writer.append(schoolEntity.getAddress().getDist());
				writer.append(',');
				writer.append(schoolEntity.getAddress().getState());
				writer.append(',');

				SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
				sd.setTimeZone(TimeZone.getTimeZone("IST"));
				String dateStr = sd.format(courierList.get(i)
						.getCourierDispatchDate());

				writer.append(dateStr);
				writer.append(',');
				writer.append(courierList.get(i).getLogistics());
				writer.append(',');
				String courierName = UtilityService.trimForCSV(courierList.get(
						i).getCourierName());
				writer.append(courierName);
				writer.append(',');
				String courierDocketID = UtilityService.trimForCSV(courierList
						.get(i).getCourierDocketID());
				writer.append(courierDocketID);
				writer.append(',');
				float courierCost = courierList.get(i).getCourierCost();
				writer.append(Float.toString(courierCost));
				writer.append(',');

				writer.append(System.lineSeparator());

			}
			writer.close();
		} catch (Exception e) {
			throw new ServletException("Exception in Excel Sample Servlet", e);
		} finally {

		}

	}
}
